/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2023-11-17 22:49:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.example.Entities.TypingProcess;

public final class typing_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>HippoType</title>\n");
      out.write("    <style>\n");
      out.write("        #inputText {\n");
      out.write("            width: 800px;\n");
      out.write("            height: 200px;\n");
      out.write("            margin: 20px;\n");
      out.write("            alignment: center;\n");
      out.write("            align-items: center;\n");
      out.write("\n");
      out.write("        }\n");
      out.write("        #info, #inputBlock{\n");
      out.write("            text-align: center;\n");
      out.write("            font-size: 25px;\n");
      out.write("\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #info {\n");
      out.write("            display: block;\n");
      out.write("            margin-left: 50px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #textBlock {\n");
      out.write("            border: 5px solid;\n");
      out.write("            margin: auto;\n");
      out.write("            width: 50%;\n");
      out.write("            padding: 5px;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #endGame, #startGame {\n");
      out.write("            padding: 10px;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            font-size: 20px;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .hide {\n");
      out.write("            display: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .show {\n");
      out.write("            display: block;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #login {\n");
      out.write("            display: block;\n");
      out.write("            font-size: 35px;\n");
      out.write("            text-align: right;\n");
      out.write("            margin-right: 30px;\n");
      out.write("            alignment: right;\n");
      out.write("\n");
      out.write("\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
 TypingProcess typingProcess = (TypingProcess) request.getAttribute("typingProcess"); 
      out.write('\n');
 String login = (String) request.getAttribute("userLogin"); 
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"upperInfo\">\n");
      out.write("    <button onclick=\"forwardToLoginServlet()\" id=\"authorizationButton\">Авторизоваться</button>\n");
      out.write("    <button onclick=\"logOut()\" id=\"LogOutButton\">Выйти</button>\n");
      out.write("    <button onclick=\"register()\" id=\"registrationBtn\">Зарегистрироваться</button>\n");
      out.write("    <span id=\"login\">");
      out.print("Ваш логин: " + login);
      out.write("</span>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"textBlock\">\n");
      out.write("\n");
      out.write("    <p style=\"font-size: 30px\" id=\"text\" oncopy=\"return false\">");
      out.print(typingProcess.getTask().getText().getText());
      out.write("</p>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"inputBlock\">\n");
      out.write("    <textarea placeholder=\"Начните ввод для запуска игры\" style=\"font-size: 30px\" onpaste=\"return false\" id=\"inputText\"></textarea>\n");
      out.write("    <div id=\"info\">\n");
      out.write("        <span id=\"errors\">Errors: 0</span><br>\n");
      out.write("        <span id=\"lastTryErrors\">Last try errors: 0</span><br>\n");
      out.write("        <span id=\"timer\">Timer: 0 seconds</span><br><br>\n");
      out.write("        <button id=\"endGame\" onclick=\"gameEnded()\">Остановить игру</button><br>\n");
      out.write("        <button id=\"startGame\" onclick=\"changeText()\">Обновить текст</button>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    const text = document.getElementById(\"text\").innerText;\n");
      out.write("    const input = document.getElementById(\"inputText\");\n");
      out.write("    const timer = document.getElementById(\"timer\");\n");
      out.write("\n");
      out.write("    let index = 0;\n");
      out.write("    let errors = 0;\n");
      out.write("    let timerInterval;\n");
      out.write("    let timerCounter = 0;\n");
      out.write("\n");
      out.write("    input.addEventListener(\"keypress\", event => {\n");
      out.write("        if (index === 0) {\n");
      out.write("            gameEnded()\n");
      out.write("            sendRequestWithText(\"setStartTime\");\n");
      out.write("            timer.innerText = \"Timer: 0 seconds\";\n");
      out.write("            timerInterval = setInterval(\"startTimer()\", 1000);\n");
      out.write("        }\n");
      out.write("        if (event.key !== text.charAt(index)) {\n");
      out.write("            errors += 1;\n");
      out.write("            sendRequestWithText(\"error\");\n");
      out.write("        }\n");
      out.write("        console.log(\"Errors: \" + errors + \", index: \" + index);\n");
      out.write("        index++;\n");
      out.write("    })\n");
      out.write("\n");
      out.write("    input.addEventListener(\"keyup\", () => {\n");
      out.write("        if (index === text.length) {\n");
      out.write("            sendRequestWithText(input.value);\n");
      out.write("            gameEnded();\n");
      out.write("        }\n");
      out.write("        document.getElementById(\"errors\").innerText = \"Errors: \" + errors;\n");
      out.write("    })\n");
      out.write("\n");
      out.write("    input.addEventListener(\"keydown\", () => {\n");
      out.write("        index = input.value.length;\n");
      out.write("    })\n");
      out.write("\n");
      out.write("    function startTimer() {\n");
      out.write("        timerCounter++;\n");
      out.write("        timer.innerHTML = \"Timer: \" + timerCounter + \" seconds\";\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function gameEnded() {\n");
      out.write("        clearInterval(timerInterval);\n");
      out.write("        document.getElementById(\"errors\").innerText = \"Errors: \" + 0;\n");
      out.write("        document.getElementById(\"lastTryErrors\").innerText = \"Last try errors: \" + errors;\n");
      out.write("        input.value = \"\";\n");
      out.write("        errors = 0;\n");
      out.write("        timerCounter = 0;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function changeText() {\n");
      out.write("        window.location.href = \"/SpeedTypingProject/typing\";\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function sendRequestWithText(text) {\n");
      out.write("         fetch(\"/SpeedTypingProject/typing\", {\n");
      out.write("            method: \"POST\",\n");
      out.write("            body: text,\n");
      out.write("            headers: {\n");
      out.write("                \"Content-type\": \"text/plain\"\n");
      out.write("            }\n");
      out.write("        })\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function logOut() {\n");
      out.write("        sendRequestWithText(\"log out\")\n");
      out.write("        window.location.href = \"/SpeedTypingProject/typing\"\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function register(){\n");
      out.write("        window.location.href = \"/SpeedTypingProject/reg\"\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    const login = document.getElementById(\"login\");\n");
      out.write("    const authButton = document.getElementById(\"authorizationButton\");\n");
      out.write("    const logOutBtn = document.getElementById(\"LogOutButton\");\n");
      out.write("    const regBtn = document.getElementById(\"registrationBtn\");\n");
      out.write("    if (login.innerText === \"Ваш логин: null\") {\n");
      out.write("        login.innerText = \"\";\n");
      out.write("        authButton.classList.add(\"show\");\n");
      out.write("        regBtn.classList.add(\"show\");\n");
      out.write("        logOutBtn.classList.add(\"hide\");\n");
      out.write("    } else {\n");
      out.write("        authButton.classList.add(\"hide\");\n");
      out.write("        regBtn.classList.add(\"hide\");\n");
      out.write("        logOutBtn.classList.add(\"show\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function forwardToLoginServlet() {\n");
      out.write("        window.location.href = \"/SpeedTypingProject/login\";\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
